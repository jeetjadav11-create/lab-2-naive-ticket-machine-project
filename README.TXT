Project: naive-ticket-machine
Authors: David Barnes and Michael Kölling

This project is part of the material for the book

   Objects First with Java - A Practical Introduction using BlueJ
   Seventh edition
   David J. Barnes and Michael Kölling
   Pearson Education

It is discussed in chapter 2.

Purpose of project: To illustrate the basics of fields, constructors, and methods.
How to start this project: Create one or more TicketMachine objects.

2. 0

3. adding any anoumt of money will show in the balance. You will always get a tickets and the blance will always reset to 0 even if there is too much money or not enought money

5.the only different thing is the different price that shows in the ticket

6. public class LabClass {}  public class Student {}

7.yes , if u write class public the whole program will stop working and there will be double checkers on the class diagram . its says class ... not expected , it dosent help 

8. yes

9.no

10. fields;privite int price, privite int balance,privite int total
    methods; public void printTicket(),public void insertMoney(int amount),...
    constructurs ;
    public TicketMachine(int cost)
    {
        price = cost;
        balance = 0;
        total = 0;
    }

    
11. its initailization the projets , makes sure it starts properly 

12.int,int,int 

13. alive, tutor, game

14. private int count;,private boolean alive;,private Person tutor;

15.it needs to be in this order,if not it says ... unidentified

16. yes 

17.private int status

18. public?

19.1)title(string),price(double)

20. yes you can know a lot about book from its constructur parametres 

21. name = 0 

22. public Date(string "day",date,year)

23.the word balance and price 

24."how much money is in the machine 

25. no , they cn be different

27. missing return satement 

28. the body of ticket is way longer and more detailled 

29.this balance = balance + amount; and this  balance = 0;

31. score = score + points 

32. because a  mutator is Used to mutate (i.e., change) an object’s state.

33. price = price - amount 

34. public void currentAge(int age)
{
currentage = age;
}

35.  private boolean alive(int age)
{
alive = age;
}

36. 
